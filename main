do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (4==v0) then vv9());break;end if (3==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v31)if (v2(v31,2)==79) then local v67=0;while true do if (0==v67) then v20=v1(v4(v31,1,1));return "";end end else local v68=0;local v69;while true do if (v68==0) then v69=v3(v1(v31,16));if v20 then local v82=v6(v69,v20);v20=nil;return v82;else return v69;end break;end end end end);v18=1;end if (v18==6) then v29=nil;function v29()local v39=0 + 0;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v39~=(7 -4)) then else v46=nil;while true do local v75=0;while true do if (v75==(1 + 0)) then if (v40==1) then v45=v24();v46={};for v86=4 -3,v45 do local v87=0 + 0;local v88;local v89;local v90;while true do if (v87~=(1801 -(828 + 972))) then else v90=nil;while true do if (v88~=0) then else local v117=0 -0;local v118;while true do if (v117~=(1217 -(1197 + 20))) then else v118=1052 -(518 + 534);while true do if (v118==(0 -0)) then v89=v22();v90=nil;v118=1 + 0;end if (v118==(847 -(319 + 527))) then v88=2 -1;break;end end break;end end end if (v88~=(757 -(621 + 135))) then else if (v89==(1678 -(439 + 1238))) then v90=v22()~=0;elseif (v89==(1 + 1)) then v90=v25();elseif (v89~=(1055 -(586 + 466))) then else v90=v26();end v46[v86]=v90;break;end end break;end if (v87~=0) then else local v106=0;local v107;while true do if (v106==0) then v107=0 -0;while true do if (v107==(1807 -(151 + 1655))) then v87=610 -(581 + 28);break;end if (v107~=(0 + 0)) then else local v127=974 -(464 + 510);while true do if (v127~=0) then else v88=0;v89=nil;v127=1;end if ((1659 -(285 + 1373))~=v127) then else v107=258 -(100 + 157);break;end end end end break;end end end end end v44[3]=v22();v40=2 + 0;end break;end if (v75~=(0 -0)) then else if (v40~=0) then else local v84=0 + 0;while true do if (v84~=0) then else v41={};v42={};v84=2 -1;end if (v84==(4 -3)) then v43={};v44={v41,v42,nil,v43};v84=1 + 1;end if (v84~=(674 -(446 + 226))) then else v40=1 -0;break;end end end if (v40==(1057 -(170 + 885))) then local v85=0 + 0;while true do if (0~=v85) then else for v108=1459 -(709 + 749),v24() do local v109=0 + 0;local v110;while true do if (v109~=(0 -0)) then else v110=v22();if (v21(v110,1,1535 -(1451 + 83))~=(0 + 0)) then else local v122=117 -(93 + 24);local v123;local v124;local v125;local v126;while true do if (v122~=(1 + 0)) then else local v128=0;while true do if ((324 -(61 + 262))==v128) then v122=7 -5;break;end if (v128~=(0 + 0)) then else v125=nil;v126=nil;v128=2 -1;end end end if (v122~=(0 + 0)) then else local v129=0 -0;while true do if (v129==1) then v122=1 + 0;break;end if (v129==(1694 -(966 + 728))) then local v130=1596 -(628 + 968);while true do if (v130==(1 + 0)) then v129=740 -(303 + 436);break;end if (v130~=(0 -0)) then else v123=0 -0;v124=nil;v130=356 -(91 + 264);end end end end end if ((4 -2)==v122) then while true do if ((0 + 0)==v123) then local v131=912 -(643 + 269);while true do if (v131~=(1 -0)) then else v123=1061 -(904 + 156);break;end if (v131==(1776 -(768 + 1008))) then local v143=1419 -(975 + 444);local v144;while true do if (v143==(0 + 0)) then v144=1163 -(608 + 555);while true do if (v144==0) then local v205=0;while true do if (v205==(652 -(634 + 18))) then v124=v21(v110,2,3);v125=v21(v110,4,6);v205=1163 -(974 + 188);end if (v205~=1) then else v144=1798 -(1041 + 756);break;end end end if (v144~=(1135 -(763 + 371))) then else v131=1 + 0;break;end end break;end end end end end if ((1 + 0)==v123) then local v132=0;local v133;while true do if (v132==(0 -0)) then v133=0;while true do if (v133~=(0 -0)) then else local v201=738 -(56 + 682);local v202;while true do if ((559 -(106 + 453))==v201) then v202=0 -0;while true do if (v202==(647 -(584 + 63))) then v126={v23(),v23(),nil,nil};if (v124==0) then local v243=0 -0;local v244;local v245;local v246;while true do if ((1815 -(539 + 1276))~=v243) then else v244=0 + 0;v245=nil;v243=1 + 0;end if (v243==(3 -2)) then v246=nil;while true do if (v244==1) then while true do if (v245~=0) then else v246=0;while true do if (v246~=(701 -(586 + 115))) then else v126[3]=v23();v126[4]=v23();break;end end break;end end break;end if (v244==0) then v245=0 -0;v246=nil;v244=3 -2;end end break;end end elseif (v124==(1 + 0)) then v126[3]=v24();elseif (v124==(1669 -(1089 + 578))) then v126[3]=v24() -(2^16);elseif (v124==(1353 -(1159 + 191))) then local v273=1484 -(546 + 938);local v274;while true do if (v273==(1200 -(232 + 968))) then v274=0 -0;while true do if ((0 -0)==v274) then v126[1384 -(1189 + 192)]=v24() -((4 -2)^(10 + 6));v126[11 -7]=v23();break;end end break;end end end v202=1 + 0;end if (v202~=1) then else v133=697 -(312 + 384);break;end end break;end end end if (v133==(1 + 0)) then v123=1 + 1;break;end end break;end end end if (v123==(51 -(18 + 31))) then local v134=0;local v135;while true do if (v134~=0) then else v135=473 -(226 + 247);while true do if (v135==1) then v123=3;break;end if (v135~=(0 -0)) then else if (v21(v125,1047 -(43 + 1003),1)==(1 + 0)) then v126[2]=v46[v126[9 -7]];end if (v21(v125,931 -(811 + 118),2 + 0)==(1 + 0)) then v126[695 -(44 + 648)]=v46[v126[3]];end v135=1675 -(1089 + 585);end end break;end end end if (v123~=(6 -3)) then else if (v21(v125,1 + 2,3 -0)==(1 + 0)) then v126[1584 -(67 + 1513)]=v46[v126[550 -(391 + 155)]];end v41[v108]=v126;break;end end break;end end end break;end end end for v111=2 -1,v24() do v42[v111-(1 + 0)]=v29();end v85=1;end if ((1323 -(936 + 386))~=v85) then else for v113=1 + 0,v24() do v43[v113]=v24();end return v44;end end end v75=1 + 0;end end end break;end if (v39==(905 -(752 + 152))) then v42=nil;v43=nil;v39=2 + 0;end if (v39~=2) then else v44=nil;v45=nil;v39=3;end if (v39==(0 + 0)) then v40=0 -0;v41=nil;v39=1 -0;end end end v30=nil;v18=7;end if (v18==1) then v21=nil;function v21(v32,v33,v34)if v34 then local v70=0 -(0 -0);local v71;while true do if (v70==(0 + 0)) then v71=(v32/((1268 -(665 + 601))^(v33-(1 -0))))%((2 + 0)^(((v34-(1797 -(1762 + 34))) -(v33-(4 -3))) + (167 -(22 + 144))));return v71-(v71%(1752 -(1388 + (1033 -(320 + 350)))));end end else local v72=0 -0;local v73;while true do if (v72==(0 -0)) then v73=((5135 -3281) -(1573 + 279))^(v33-1);return (((v32%(v73 + v73))>=v73) and (1707 -((2628 -(19 + 1514)) + 611))) or (0 -0);end end end end v22=nil;v18=2;end if (v18==7) then function v30(v35,v36,v37)local v47=0;local v48;local v49;local v50;while true do if (v47==1) then v50=v35[3];return function(...)local v76=0;local v77;local v78;local v79;local v80;local v81;while true do if (v76==0) then v77=1;v78= -1;v76=1;end if (v76==1) then v79={...};v80=v12("#",...) -1;v76=2;end if (v76==3) then A,B=v28(v11(v81));if  not A[1] then local v91=v35[4][v77] or "?";error("Script error at ["   .. v91   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v76==2) then v81=nil;function v81()local v92=v48;local v93=Const;local v94=v49;local v95=v50;local v96=v28;local v97={};local v98={};local v99={};for v103=0 -0,v80 do if (((4968 -(1311 + 111))==(7373 -3827)) and (v103>=v95)) then v97[v103-v95]=v79[v103 + 1 + 0];else v99[v103]=v79[v103 + 1];end end local v100=(v80-v95) + (201 -(105 + 95));local v101;local v102;while true do local v104=0;local v105;while true do if (((5244 -(347 + 579 + 58))>=(2680 -(874 + 741))) and (v104==(0 -0))) then v105=0;while true do if ((v105==(1320 -(1084 + 236))) or ((4777 -1618)>=((33686 -25195) -4425))) then local v120=1919 -(445 + 1099 + 375);local v121;while true do if (((5510 -(3530 -(132 + 138)))<(14432 -9698)) and (v120==0)) then v121=0 + 0;while true do if ((372>(2166 -(1000 + 907))) and (v121==(0 -0))) then v101=v92[v77];v102=v101[2 -(1928 -(1286 + 641))];v121=1;end if ((v121==1) or ((3832 -(147 + 1391))>=2573)) then v105=1181 -(596 + 584);break;end end break;end end end if ((v105==(1451 -(987 + 432 + 31))) or ((2212 + (1117 -426))>=(4245 -(307 + 922)))) then if ((2108==(3017 -((1434 -(956 + 308)) + 739))) and (v102<=(42 -30))) then if (((3668 -(635 + 124))==2909) and (v102<=(6 -1))) then if ((((19871 -12069) -4211)==3591) and (v102<=(1 + 1))) then if ((v102<=(1246 -(280 + 966))) or ((3085 -(489 + 154))==(8952 -4743))) then v99[v101[2]]=v101[1 + 2];elseif ((v102==(1636 -(701 + (3059 -2125)))) or ((2444 -1487)>=4126)) then for v196=v101[5 -3],v101[690 -((1391 -929) + 225)] do v99[v196]=nil;end else local v145=0 -(0 -0);local v146;local v147;local v148;while true do if (((8993 -4464)>(4949 -(440 + (4461 -2964)))) and (v145==(78 -((279 -(85 + 119)) + 2)))) then v148=nil;while true do if (((0 -0)==v146) or ((6525 -(5415 -(1139 + 701)))<(1774 -(978 + 406)))) then local v206=0;while true do if ((v206==(0 + 0)) or ((2016 -1319)>(14441 -9794))) then v147=(0 + 0) -0;v148=nil;v206=4 -3;end if (((533 + 4273)>=(2933 -(8 + 22))) and (v206==(1 + 0))) then v146=1;break;end end end if ((v146==(564 -(446 + 111 + 6))) or (4629<(575 -341))) then while true do if ((v147==0) or ((2 + 22)>=(11507 -8225))) then v148=v101[1239 -(1151 + 57 + 29)];v99[v148]=v99[v148](v99[v148 + 1]);break;end end break;end end break;end if ((v145==0) or ((2068 -(489 + 956))<=(1036 -431))) then v146=167 -(109 + 58);v147=nil;v145=867 -(704 + (459 -(11 + 286)));end end end elseif ((v102<=(2 + 1)) or ((3297 -(173 + 1418))>=(7814 -5395))) then v99[v101[(1434 -(431 + 67)) -(165 + (2620 -1851))]][v101[8 -5]]=v101[925 -((1117 -(353 + 455)) + 612)];elseif (((2614 -(63 + 12 + 270))<(9797 -6075)) and (v102==(57 -(4 + 49)))) then v99[v101[1362 -(1318 + 42)]]=v99[v101[911 -(625 + 283)]];else local v150=0 -(0 + 0);local v151;local v152;local v153;local v154;local v155;while true do if ((v150==0) or ((4152 -2852)<(702 + 549))) then v151=0 + (0 -0);v152=nil;v150=1 -0;end if ((1627<=(2738 -956)) and (v150==(4 -2))) then v155=nil;while true do if ((v151==0) or ((204 -134)>=(1916 + 365))) then local v207=0 -0;while true do if ((((3898 -2409) + 1363)>=((3784 -(1041 + 31)) -(30 + 19))) and ((1 -0)==v207)) then v151=946 -(643 + 302);break;end if (((1220 + 249)<=(2174 + 323)) and (v207==((2628 -(395 + 1426)) -(356 + 451)))) then v152=v101[1118 -(432 + 684)];v153,v154=v96(v99[v152](v99[v152 + 1]));v207=1 + 0;end end end if ((4383<(333 + (16627 -12056))) and (v151==(612 -(316 + 295)))) then v78=(v154 + v152) -1;v155=383 -(355 + 28);v151=1 + 1;end if ((v151==(1 + 1)) or (2828>(1401 + (5578 -3860)))) then for v213=v152,v78 do local v214=(147 -(74 + 73)) -0;local v215;while true do if ((125<((1511 + 338) -(713 + 319))) and (v214==(0 -0))) then v215=(1570 -(132 + 66)) -(1129 + 243);while true do if ((v215==(0 + 0)) or (((1331 -897) + 785)<=(1205 -562))) then v155=v155 + 1 + 0;v99[v213]=v153[v155];break;end end break;end end end break;end end break;end if (((1413 + 648)<(5522 -(8866 -6239))) and (v150==((3403 -(1070 + 555)) -(853 + 924)))) then v153=nil;v154=nil;v150=5 -3;end end end elseif (((3924 -(402 + 65))>(7234 -4893)) and (v102<=((35 -11) -16))) then if ((v102<=(5 + 1)) or ((2655 + 2185)<=((1126 + 778) -(2464 -1354)))) then v99[v101[2 + 0]]();elseif ((v102==7) or (1013>=(4441 -2410))) then local v156=0 -0;local v157;local v158;local v159;local v160;while true do if (((4912 -(3270 -(47 + 350)))==2039) and ((1 + 1)==v156)) then while true do if ((v157==(1428 -(103 + 1324))) or ((6073 -3722)>(1112 + 1270))) then local v208=0 + 0;while true do if ((3685<(8377 -(3863 + 28))) and (v208==(1 + 0))) then v157=1 + 1;break;end if (((2120 -(131 + 495))<(1256 + 407)) and (0==v208)) then v160={};v159=v10({},{__index=function(v233,v234)local v247=304 -(122 + (1553 -(878 + 493)));local v248;local v249;local v250;while true do if (((1501 -(64 + 51))<(3830 -(1490 + 429))) and (v247==(0 -0))) then v248=0;v249=nil;v247=1050 -(895 + 154);end if ((v247==(1 + 0 + 0)) or ((4623 -(75 + 131))<(5343 -(1255 + 45)))) then v250=nil;while true do if ((v248==0) or ((1659 + 72)>((14125 -9619) -(356 + 315)))) then v249=0;v250=nil;v248=3 -2;end if (((1912 + 61)<((4167 -(681 + 1208)) + 63)) and (v248==(2 -(1981 -(1255 + 725))))) then while true do if ((v249==(0 -(0 -0))) or (4241>(15869 -11319))) then local v277=0 + 0;while true do if (((5317 -(859 + 641))>1919) and ((0 + 0)==v277)) then v250=v160[v234];return v250[2 -1][v250[5 -3]];end end end end break;end end break;end end end,__newindex=function(v235,v236,v237)local v251=(2909 -(617 + 442)) -(237 + 1613);local v252;local v253;local v254;while true do if (((9225 -4351)>2258) and (v251==(0 + 0))) then v252=1045 -(146 + 899);v253=nil;v251=4 -3;end if ((v251==(1 + 0)) or ((3182 -(265 + 9))<(659 -(25 + 381)))) then v254=nil;while true do if ((v252==(1105 -(462 + 642))) or (164>=(2871 -(209 + 21 + 313)))) then while true do if ((((1024 -(177 + 786)) + 417 + 502)<(11518 -7765)) and (((449 + 701) -((370 -228) + 1008))==v253)) then v254=v160[v236];v254[779 -((813 -388) + 353)][v254[2]]=v237;break;end end break;end if ((v252==(1558 -(662 + 896))) or ((1775 -1131)>=1874)) then v253=(0 + 0) -0;v254=nil;v252=1;end end break;end end end});v208=1138 -(1131 + 6);end end end if (((2 + 0)==v157) or (((2043 -(1011 + 817)) + 4609)==(3083 -1435))) then for v216=11 -(8 + 2),v101[10 -6] do local v217=0 + 0;local v218;local v219;while true do if (((1551 -(767 + 784))==v217) or (804==(5173 -2913))) then local v238=0 + 0;while true do if ((v238==(536 -(73 + 463))) or (3269>=(779 + 3569))) then v218=0 + 0;v219=nil;v238=589 -(32 + (1119 -(38 + 525)));end if (((2559 -1528)==(3786 -2755)) and (v238==(1037 -(553 + 483)))) then v217=1151 -(1001 + 149);break;end end end if ((v217==(570 -(226 + 175 + 168))) or ((7044 -3273)>=(5566 -(150 + 1143)))) then while true do if ((2359<=(13099 -8349)) and (v218==(1 + 0))) then if ((v219[1 + 0]==(10 -6)) or ((11102 -8267)==(446 + 1209))) then v160[v216-(2 -1)]={v99,v219[4 -1]};else v160[v216-(1308 -(709 + 598))]={v36,v219[3]};end v98[ #v98 + 1 + 0]=v160;break;end if ((3690<=4457) and (v218==(0 -0))) then local v265=0;local v266;while true do if ((2639<=(6840 -3158)) and (v265==(0 -0))) then v266=0;while true do if ((v266==((1115 + 343) -(795 + 663))) or ((13224 -9425)>(6192 -(1151 + 542)))) then v77=v77 + (1 -(0 + 0));v219=v92[v77];v266=2 -1;end if (((1446 + 3068)<((12213 -6431) -(280 + 690 + 240))) and (v266==(1 -0))) then v218=(1177 + 483) -(1657 + (132 -(92 + 38)));break;end end break;end end end end break;end end end v99[v101[2]]=v30(v158,v159,v37);break;end if (((82 + 474)<=4113) and (v157==0)) then local v210=(1891 -(1518 + 373)) -0;while true do if ((v210==(0 -0)) or ((2270 + 817)<(2154 -1061))) then v158=v94[v101[1681 -(384 + 1294)]];v159=nil;v210=1960 -(1325 + (1744 -(100 + 1010)));end if (((4036 -(403 + 117))==(2391 + 1125)) and (v210==(1 + 0))) then v157=1 + 0;break;end end end end break;end if ((4726>57) and (v156==(2 -1))) then v159=nil;v160=nil;v156=2 -0;end if (((1332 + 272 + 74)==(4864 -3186)) and (v156==(0 -0))) then v157=958 -(169 + 623 + 166);v158=nil;v156=665 -(383 + 281);end end elseif (((539 -296)<=(3798 -((262 -178) + 618))) and v99[v101[(3866 -2585) -(320 + 959)]]) then v77=v77 + 1 + 0;else v77=v101[10 -(5 + 2)];end elseif (((1710 + 966 + 1642)==(19114 -14796)) and (v102<=(45 -(1129 -(827 + 267))))) then if ((v102==(1318 -(709 + 600))) or (2523<=666)) then local v161=0 + 0;local v162;local v163;local v164;while true do if ((v161==0) or (3893<=(196 + 463))) then v162=0 + 0;v163=nil;v161=1;end if ((v161==1) or (1600>=(1140 + 2892))) then v164=nil;while true do if (((8541 -4608)>=(1972 -(496 + 926))) and (v162==(1 + (0 -0)))) then for v220=46 -(40 + 5), #v98 do local v221=0 -(0 + 0);local v222;while true do if (((79 -(24 + 12))<(1593 -(1069 + 235))) and ((0 -0)==v221)) then v222=v98[v220];for v255=959 -(223 + 736), #v222 do local v256=0;local v257;local v258;local v259;local v260;local v261;while true do if (((155 + 535)<(3174 -2334)) and (v256==(0 -0))) then v257=0 -0;v258=nil;v256=1;end if ((v256==(1779 -(103 + 1674))) or (3070<1946)) then v261=nil;while true do if ((v257==(0 + 0)) or ((4671 -(1242 + 343))>(5597 -(707 + 187)))) then local v275=0;while true do if (((0 -(0 -0))==v275) or (930>(4505 -(362 + 716)))) then v258=1840 -(1186 + 654);v259=nil;v275=974 -(699 + 274);end if ((1502>(781 + 597)) and (v275==(745 -(48 + 696)))) then v257=1 + 0;break;end end end if (((3789 -(592 + 973))<=(1569 + 3283)) and (v257==(1846 -(1437 + 407)))) then while true do if ((3670>(16414 -13021)) and (v258==1)) then v261=v259[2 + 0];if (((v260==v99) and (v261>=v163)) or ((2406 + 1394)>=(5770 -((1729 -873) + 71)))) then local v281=1119 -(664 + 455);local v282;local v283;while true do if ((v281==(0 -0)) or ((4088 -1562)>((18804 -10647) -3580))) then v282=0 -0;v283=nil;v281=1 + 0;end if ((v281==1) or ((5451 -3630)==(4060 -2925))) then while true do if (((4589 -(45 + 41))==(2509 + 1994)) and (v282==(0 -(631 -(582 + 49))))) then v283=0 -0;while true do if ((v283==(0 -0)) or ((2812 -2083)>=(42 + 1070))) then v164[v261]=v260[v261];v259[1078 -(527 + 550)]=v164;break;end end break;end end break;end end end break;end if (((0 + 0)==v258) or ((4324 -1624)<(2761 -((819 -(660 + 51)) + 128)))) then local v279=0 -(0 + 0);local v280;while true do if ((v279==(0 + 0)) or ((5986 -(686 + 382))<=(6183 -2239))) then v280=0 + 0;while true do if (((3 -2)==v280) or (2739<596)) then v258=585 -(343 + 241);break;end if (((0 -(0 -0))==v280) or ((12487 -9600)<(2912 -(120 + 1107)))) then v259=v222[v255];v260=v259[369 -(301 + 67)];v280=1 + 0;end end break;end end end end break;end if ((4060==(8247 -4187)) and ((1 + 0)==v257)) then local v276=0 + 0;while true do if (((346 + 614)==(1053 -(17 + 76))) and (v276==(1977 -(1447 + 530)))) then v260=nil;v261=nil;v276=1 + 0;end if ((v276==(3 -2)) or (2905<=(5705 -4260))) then v257=9 -7;break;end end end end break;end if ((v256==(823 -(502 + 320))) or (2263==(3911 -(143 + 39)))) then v259=nil;v260=nil;v256=2 + 0;end end end break;end end end break;end if (((13924 -9954)>=(890 + 2936)) and (v162==(0 -0))) then v163=v101[2];v164={};v162=(2491 -(91 + 1475)) -(325 + 599);end end break;end end else v99[v101[1 + 1]][v101[1251 -(20 + 1228)]]=v99[v101[3 + 1]];end elseif (((2775 -(541 + 1241))<((882 -(130 + 293)) + 640)) and (v102>(11 + (1584 -(982 + 602))))) then do return;end else local v166=0;local v167;local v168;local v169;local v170;local v171;while true do if ((2249<=(4069 -(896 + 3))) and (v166==(0 -0))) then v167=0;v168=nil;v166=1;end if ((2941==((5938 -(942 + 755)) -(805 + 495))) and (v166==(1 + 0))) then v169=nil;v170=nil;v166=(122 -(23 + 94)) -3;end if (((1866 -(31 + 8))<(5955 -(4603 -1122))) and (v166==(8 -6))) then v171=nil;while true do if ((v167==(0 + 0)) or (1197<=(79 + 831))) then local v211=424 -(400 + 24);while true do if (((290 -145)==(96 + 49)) and (v211==(432 -((661 -322) + 92)))) then v167=63 -(50 + 12);break;end if ((v211==0) or ((1474 + 1212 + 35)>(18988 -15180))) then v168=0;v169=nil;v211=(1330 -(1111 + 217)) -1;end end end if (((184 + 359)<=(4184 -(577 + 1002 + 88))) and (v167==1)) then v170=nil;v171=nil;v167=2;end if ((v167==2) or (794<=104)) then while true do if ((((2614 -1311) -(634 + 669))==v168) or ((453 + 3505)<(1657 -(1042 + 462)))) then local v228=0 -0;local v229;while true do if (((0 + 0)==v228) or ((2100 + 489)==(3029 -(445 + 760)))) then v229=(302 + 42) -(15 + 329);while true do if (((4188 -(263 + 39))>(1460 + 1350)) and (v229==(0 -0))) then v169=v101[9 -7];v170={v99[v169](v13(v99,v169 + ((309 -175) -(129 + 4)),v78))};v229=4 -3;end if ((v229==(3 -2)) or ((1857 -(48 + 41))==3435)) then v168=1 + 0;break;end end break;end end end if ((v168==(1175 -(650 + 524))) or (((8642 -4501) -(636 + 480))==(100 + 136))) then v171=0;for v239=v169,v101[7 -3] do local v240=385 -(308 + 77);local v241;while true do if ((v240==(0 + 0)) or ((3592 -(391 + 252))==((270 -92) + 914))) then v241=0;while true do if (((6214 -2926)>=(156 + 639)) and (v241==(470 -(125 + 345)))) then v171=v171 + 1;v99[v239]=v170[v171];break;end end break;end end end break;end end break;end end break;end end end elseif ((v102<=(8 + 11)) or (104>3264)) then if (((2051 + 1539)>=((2051 -(162 + 583)) + 290)) and (v102<=(701 -((742 -350) + 294)))) then if (((13 + 323)==((267 -(100 + 20)) + 189)) and (v102<=(10 + 3))) then local v139=0 -0;local v140;local v141;while true do if (((12647 -(10346 -(193 + 1060)))>=(2499 -(289 + 724 + 57))) and (v139==(0 -0))) then local v198=29 -(10 + 19);while true do if (((2355 -(36 + 142))>(511 + 620)) and (v198==(2 -1))) then v139=1 + 0;break;end if ((v198==0) or ((3534 + 855)<360)) then v140=v101[1 + 1 + 0 + 0];v141=v99[v101[6 -3]];v198=182 -(136 + 45);end end end if ((v139==1) or (3755>(12998 -8518))) then v99[v140 + 1 + 0]=v141;v99[v140]=v141[v101[9 -(945 -(882 + 58))]];break;end end elseif ((3711>((483 + 4711) -3903)) and (v102>((17 + 0) -3))) then local v172=1139 -((1309 -615) + 445);local v173;local v174;while true do if (((4471 -(493 + (1960 -1021)))>=(114 + 62)) and (v172==(1380 -(732 + 647)))) then while true do if (((0 + 0)==v173) or ((1835 -(41 + 644))>(5905 -3990))) then v174=v101[2];v99[v174]=v99[v174](v13(v99,v174 + 1,v101[3]));break;end end break;end if (((0 + 0)==v172) or ((1879 -1267)>(828 + 1793))) then v173=1872 -(1402 + 470);v174=nil;v172=1 -(0 -0);end end else v99[v101[2 + 0 + 0]]= not v99[v101[(1713 -(735 + 977)) + 2]];end elseif ((27<=(554 -274)) and (v102<=(1967 -(776 + 1174)))) then if (((5043 -(53 + 850))>(770 + 1358)) and (v102==16)) then v99[v101[1957 -(1908 + 47)]]=v99[v101[(1398 -(777 + 616)) -2]][v101[43 -(14 + 25)]];else local v177=0;local v178;local v179;while true do if ((3732>=(1264 + 1065)) and (v177==1)) then while true do if (((890 -(1151 -492))==(578 -347)) and ((1881 -(1694 + 187))==v178)) then v179=v101[2 + 0];v99[v179](v99[v179 + (1 -0)]);break;end end break;end if (((3955 -2717)<(2948 -(388 + 494))) and (v177==0)) then v178=(780 -(202 + 578)) -0;v179=nil;v177=1 + 0;end end end elseif ((v102>(94 -(16 + 60))) or ((1721 -((145 -86) + 374))>=(4587 -1659))) then v99[v101[(26 + 658) -(503 + 179)]]=v37[v101[14 -11]];else v99[v101[1347 -(1102 + 243)]]=v36[v101[5 -2]];end elseif (((1979 -(315 + 830))<(1595 -(353 + 353))) and (v102<=(58 -36))) then if (((212 -(127 + 70))<=3931) and (v102<=20)) then v77=v101[1 + 2];elseif ((v102>(18 + 3)) or ((1512 + 3196)<=1594)) then if ((v101[5 -3]==v99[v101[5 -1]]) or ((692 + 159 + 2156)<982)) then v77=v77 + (2 -1);else v77=v101[1 + (3 -1)];end else local v182=0;local v183;local v184;local v185;local v186;local v187;local v188;while true do if ((v182==((2 -0) + 0)) or ((269 + 2140)>(240 + (3074 -(8 + 62))))) then v187=nil;v188=nil;v182=7 -4;end if ((v182==(4 -3)) or (2375>=(1480 + (2559 -(530 + 109))))) then v185=nil;v186=nil;v182=5 -3;end if ((v182==0) or ((786 -381)>(2474 -(165 + 67)))) then v183=(0 -0) + 0;v184=nil;v182=1 -0;end if ((v182==((4463 -2798) -(401 + 1261))) or (239>(1881 -(432 + 614)))) then while true do if (((2266 + 1886)>=945) and (v183==(3 -1))) then for v223=1,v185 do v99[v186 + v223]=v187[v223];end v188=v187[1 -0];v183=6 -3;end if ((((15045 -9203) -3674)>=(1855 -(144 + (4023 -2919)))) and ((1070 -(531 + 536))==v183)) then if (((5399 -2493)==(2989 -(41 + 42))) and v188) then local v225=0 -(1241 -(774 + 467));local v226;while true do if (((7 + 56)<2708) and (v225==0)) then v226=0;while true do if (((2085 + 1538)>148) and (v226==(0 + 0))) then v99[v186]=v188;v77=v101[3 + 0];break;end end break;end end else v77=v77 + 1;end break;end if ((2197<2597) and (v183==(0 -0))) then v184=v101[(8 -2) -4];v185=v101[(18 -8) -6];v183=1;end if (((215 + 2623)==(6378 -3540)) and (v183==1)) then v186=v184 + 2 + 0;v187={v99[v184](v99[v184 + (1665 -(1202 + 462))],v99[v186])};v183=52 -(40 + 8 + 2 + 0);end end break;end end end elseif ((v102<=24) or ((10795 -7531)<(4235 -(86 + 268 + 1493)))) then if ((v102==23) or (((444 + 2353) -((1280 -746) + 273))>(2983 + 364))) then if (((916 + (8635 -5806))>=(727 + 2898)) and (v99[v101[4 -2]]==v101[4 + 0])) then v77=v77 + 1 + 0;else v77=v101[3];end elseif ((v99[v101[9 -7]]==v99[v101[1 + 3]]) or ((1081 -(70 + 1001))>=(919 + 808))) then v77=v77 + (590 -(272 + 317));else v77=v101[3];end elseif ((v102==(831 -(56 + 750))) or ((1547 + 319)==(3664 -(983 + (2198 -(546 + 987)))))) then local v189=0 + 0;local v190;while true do if ((1259==(2320 -1061)) and (v189==0)) then v190=v101[6 -4];v99[v190](v13(v99,v190 + 1 + 0,v101[1834 -((5219 -3704) + 316)]));break;end end else local v191=0;local v192;local v193;local v194;local v195;while true do if (((1429 -(106 + 1078))<(14594 -11611)) and (v191==((1843 -(360 + 1482)) + 1))) then while true do if (((1454 -(653 + 678))<2347) and (v192==(1 + 0))) then v195=nil;while true do if ((v193==((3 -1) -1)) or ((581 + 1515)<=(2887 -(513 + 1257)))) then for v242=v194 + (114 -(11 + 102)),v101[514 -(118 + 392)] do v195=v195   .. v99[v242];end v99[v101[3 -1]]=v195;break;end if ((v193==(0 + 0 + (127 -(16 + 111)))) or ((1598 + 1946)<1583)) then local v231=715 -(377 + 338);local v232;while true do if ((0==v231) or ((1268 + 1544)>(12435 -8224))) then v232=0 + 0;while true do if (((3320 -(1073 + 843))>(112 + (845 -631))) and (v232==((1055 -680) -(279 + 95)))) then v193=1;break;end if (((11 + 108 + 923)<=(6709 -(851 + 1050))) and (v232==0)) then local v271=1391 -(842 + 549);while true do if ((v271==1) or ((631 + 4274)==(635 + 1035))) then v232=1551 -(473 + 1077);break;end if (((1788 -(1028 + 216))>(261 + 179)) and (v271==(0 + 0))) then v194=v101[1 + 2];v195=v99[v194];v271=440 -(267 + 172);end end end end break;end end end end break;end if ((v192==0) or (((4662 + 152) -3175)<(1240 -(314 + 137)))) then v193=0 -0;v194=nil;v192=1819 -(281 + 440 + 1097);end end break;end if (((13753 -9470)>=3220) and (v191==1)) then v194=nil;v195=nil;v191=2 -0;end if (((20 -(12 + 8))==v191) or (513>=((2798 -(1068 + 419)) + 64))) then v192=0 -0;v193=nil;v191=4 -3;end end end v77=v77 + (1 -0);break;end end break;end end end end v76=3;end end end;end if (v47==0) then v48=v35[1];v49=v35[2];v47=1;end end end return v30(v29(),{},v17)();end if (v18==4) then function v25()local v51=v24();local v52=v24();return (( -(2 + 0) * v21(v52,24 + 8)) + (325 -(47 + 277))) * ((4 -2)^(v21(v52,11 + 10,20 + 11) -(373 + (1755 -(342 + 763))))) * ((((v21(v52,(137 -(79 + 57)) + (0 -0),1845 -(723 + (5063 -3961))) * (2^(2 + 30))) + v51)/((9 -7)^(667 -(382 + 233)))) + (1997 -(1368 + 628)));end v26=nil;function v26(v38)local v53;if  not v38 then local v74=(1718 -(16 + 92)) -(578 + 1032);while true do if ((0 + 0)==v74) then v38=v24();if (v38==(917 -(173 + 744))) then return "";end break;end end end v53=v4(v16,v19,(v19 + v38) -(3 -2));v19=v19 + v38;local v54={};for v65=3 -2, #v53 do v54[v65]=v3(v2(v4(v53,v65,v65)));end return v7(v54);end v18=5;end if (v18==3) then v24=nil;function v24()local v55=0 -0;local v56;local v57;local v58;local v59;while true do if (v55==(2 -1)) then return (v59 * (51791920 -35014704)) + (v58 * 65536) + (v57 * (1425 -(608 + 561))) + v56;end if (v55==(0 + 0)) then v56,v57,v58,v59=v2(v16,v19,v19 + (497 -(258 + (528 -292))));v19=v19 + 4 + 0;v55=1;end end end v25=nil;v18=4;end if (v18==2) then function v22()local v60=0 -0;local v61;while true do if (v60==(0 -0)) then v61=v2(v16,v19,v19);v19=v19 + (1 -0);v60=98 -((41 -30) + 86);end if (v60==(1200 -(754 + 445))) then return v61;end end end v23=nil;function v23()local v62=1671 -(1262 + 409);local v63;local v64;while true do if (v62==0) then v63,v64=v2(v16,v19,v19 + 2 + 0);v19=v19 + 1 + 1;v62=1771 -(104 + 730 + 936);end if (v62==(1 -0)) then return (v64 * (632 -376)) + v63;end end end v18=3;end end end v0=4;end if (1==v0) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end
